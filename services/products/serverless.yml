service: products

frameworkVersion: '2'

useDotenv: true

plugins:
  - serverless-lift
  - serverless-rollup-plugin

package:
  individually: true

provider:
  name: aws
  runtime: nodejs14.x
  lambdaHashingVersion: 20201221
  region: eu-west-1
  environment:
    DB_HOST: ${env:DB_HOST}
    DB_PORT: ${env:DB_PORT}
    DB_USER: ${env:DB_USER}
    DB_PASSWORD: ${env:DB_PASSWORD}
    DB_DATABASE: ${env:DB_DATABASE}
    SNS_ARN:
      Ref: createProductTopic
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - 'sns:*'
          Resource:
            Ref: createProductTopic

constructs:
  catalog-items-queue:
    type: queue
    worker:
      handler: src/handlers/catalog-batch-process.handler
      dependencies:
        - '@aws-sdk/client-sns'
    batchSize: 5

functions:
  migration:
    handler: src/handlers/migration.handler
    copyFiles:
      - migrations
  productsList:
    handler: src/handlers/products-list.handler
    events:
      - http:
          path: products
          method: get
          cors: true
  productById:
    handler: src/handlers/product-by-id.handler
    events:
      - http:
          path: products/{id}
          method: get
          cors: true
          request:
            parameters:
              paths:
                id: true
  createProduct:
    handler: src/handlers/create-product.handler
    dependencies:
      - yup
    events:
      - http:
          path: products/create
          method: post
          cors: true

resources:
  Resources:
    createProductTopic:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: create-product-topic
    createProductSubscriptionSingle:
      Type: AWS::SNS::Subscription
      Properties:
        Protocol: email
        Endpoint: ${env:EMAIL_PRIMARY}
        TopicArn:
          Ref: createProductTopic
        FilterPolicy:
          count:
            - single
    createProductSubscriptionMany:
      Type: AWS::SNS::Subscription
      Properties:
        Protocol: email
        Endpoint: ${env:EMAIL_SECONDARY}
        TopicArn:
          Ref: createProductTopic
        FilterPolicy:
          count:
            - many
  Outputs:
    CatalogItemsQueueArn:
      Value: ${construct:catalog-items-queue.queueArn}
    CatalogItemsQueueUrl:
      Value: ${construct:catalog-items-queue.queueUrl}

custom:
  rollup:
    config: ./rollup.config.js
    installCommand: yarn add
    dependencies:
      - knex
      - pg
      - pino
